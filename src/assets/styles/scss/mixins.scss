@mixin clearfix {
  &:after {
    content: '.';
    visibility: hidden;
    display: block;
    height: 0;
    clear: both;
  }
}

@mixin task-card_border($color) {
  :before {
    content: '';
    width: 99%;
    height: 90%;
    display: block;
    border: 2px solid $color;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    box-sizing: border-box;
  }
}

@mixin invalidBounceKeyframes($bounceCount) {
  @keyframes invalidBounce {
    @for $i from 0 through ($bounceCount - 1) {
      #{100 / ($bounceCount * 2) * ($i * 2)}% {
        border-color: inherit;
      }
      #{100 / ($bounceCount * 2) * ($i * 2 + 1)}% {
        border-color: $error;
      }
    }
    100% {
      border-color: $error;
    }
  }
}

@mixin acrylic-glass-effect {
  backdrop-filter: blur(10px);
}

@mixin scrollbar($track-color, $thumb-color, $thumb-hover-color) {
  &::-webkit-scrollbar {
    width: 10px;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
  }

  &::-webkit-scrollbar-thumb:hover {
    background: $thumb-hover-color;
  }
}

@mixin toast-header {
  @each $type, $color in ('success': $success, 'error': $error, 'info': $info) {
    // Paint toast header according toast type in class
    .toast_#{$type} {
      border: 2px solid $color;
      color: $color;
      box-shadow: 0px 0px 3px 3px transparentize($color, 0.7);
      .toast__header {
        background: transparentize($color, 0.7);
      }
    }
  }
}

@mixin ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
